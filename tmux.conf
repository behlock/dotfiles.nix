##############
# BASIC SETUP
##############
# Default shell
set -g default-shell $SHELL
# Mouse
set -g mouse on
# History
set -g history-limit 102400
# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
# start pane indexing at 1 for tmuxinator
setw -g pane-base-index 1
# renumber windows sequentially after closing any of them
set -g renumber-windows on
# Use emacs key bindings in status line
set-option -g status-keys emacs
# Use vim keybindings in copy mode
setw -g mode-keys vi
# Faster escape sequences (default is 500ms)
# This helps when exiting insert mode in vim: http://superuser.com/a/252717/65504
set -g escape-time 10

##############
# KEYBINDINGS
##############
# Remap prefix to C-a
unbind C-b
set -g prefix C-a

# Reload tmux.conf on prefix r
bind r source-file ~/.config/home-manager/tmux.conf \; display "Config reloaded!"

# Copy-mode
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Send command on double press
bind C-a send-prefix
bind C-l send-keys 'C-l'

# Split panes and remember current path
set-option remain-on-exit on
bind '\' split-window -h -c '#{pane_current_path}'
bind | split-window -h -c '#{pane_current_path}' 'vi'
bind - split-window -v -c '#{pane_current_path}'
bind _ split-window -v -c '#{pane_current_path}' 'vi'

# Remember current path when creating new windows
bind c new-window -c '#{pane_current_path}'

# Break pane into new window and keep focus on the current window
bind b break-pane -d

# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n 'C-\' if-shell "$is_vim" "send-keys 'C-\'" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

#########
# STYLE
#########
# Style status bar
set -g status-style fg=white,bg=black
set -g window-status-current-style fg=yellow,bg=black
set -g pane-active-border-style fg=yellow,bg=black
set -g window-status-format " #I:#W#F "
set -g window-status-current-format " #I:#W#F "
set -g window-status-activity-style bg=black,fg=yellow
set -g window-status-separator ""
set -g status-justify centre

#############################
# WINDOWS/PANES/MOVEMENTS
#############################
# Resize the panes with prefix+arrow keys
bind Up resize-pane -U 10
bind Down resize-pane -D 10
bind Left resize-pane -L 20
bind Right resize-pane -R 20

# Move current window to the left with Ctrl-Shift-Left
bind-key -n C-S-Left swap-window -t -1 \; previous-window
# Move current window to the right with Ctrl-Shift-Right
bind-key -n C-S-Right swap-window -t +1 \; next-window

# Sane mouse integration/Copy pasting
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
